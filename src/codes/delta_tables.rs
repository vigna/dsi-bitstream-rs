#![doc(hidden)]
// THIS FILE HAS BEEN GENERATED BY THE SCRIPT gen_code_tables.py
// ~~~~~~~~~~~~~~~~~~~ DO NOT MODIFY ~~~~~~~~~~~~~~~~~~~~~~
// Methods for reading and writing values using precomputed tables for delta codes
use crate::traits::{BitRead, BitWrite, BE, LE};
use common_traits::*;
/// How many bits are needed to read the tables in this
pub const READ_BITS: usize = 11;
/// Maximum value writable using the table(s)
pub const WRITE_MAX: u64 = 1023;

/// Reads a value using a decoding table.
///
/// If the result is `Some` the decoding was successful, and
/// the decoded value and the length of the code are returned.
#[inline(always)]
pub fn read_table_le<B: BitRead<LE>>(backend: &mut B) -> Option<(u64, usize)> {
    if let Ok(idx) = backend.peek_bits(READ_BITS) {
        let idx = idx.cast() as usize;
        let len = READ_LEN_LE[idx];
        if len != MISSING_VALUE_LEN_LE {
            backend.skip_bits_after_peek(len as usize);
            return Some((READ_LE[idx] as u64, len as usize));
        }
    }
    None
}

/// Write a value using an encoding table.
///
/// If the result is `Some` the encoding was successful, and
/// length of the code is returned.
#[inline(always)]
pub fn write_table_le<B: BitWrite<LE>>(
    backend: &mut B,
    value: u64,
) -> Result<Option<usize>, B::Error> {
    Ok(if let Some(bits) = WRITE_LE.get(value as usize) {
        let len = WRITE_LEN_LE[value as usize] as usize;
        backend.write_bits(*bits as u64, len)?;
        Some(len)
    } else {
        None
    })
}

/// Reads a value using a decoding table.
///
/// If the result is `Some` the decoding was successful, and
/// the decoded value and the length of the code are returned.
#[inline(always)]
pub fn read_table_be<B: BitRead<BE>>(backend: &mut B) -> Option<(u64, usize)> {
    if let Ok(idx) = backend.peek_bits(READ_BITS) {
        let idx = idx.cast() as usize;
        let len = READ_LEN_BE[idx];
        if len != MISSING_VALUE_LEN_BE {
            backend.skip_bits_after_peek(len as usize);
            return Some((READ_BE[idx] as u64, len as usize));
        }
    }
    None
}

/// Write a value using an encoding table.
///
/// If the result is `Some` the encoding was successful, and
/// length of the code is returned.
#[inline(always)]
pub fn write_table_be<B: BitWrite<BE>>(
    backend: &mut B,
    value: u64,
) -> Result<Option<usize>, B::Error> {
    Ok(if let Some(bits) = WRITE_BE.get(value as usize) {
        let len = WRITE_LEN_BE[value as usize] as usize;
        backend.write_bits(*bits as u64, len)?;
        Some(len)
    } else {
        None
    })
}
/// The len we assign to a code that cannot be decoded through the table
pub const MISSING_VALUE_LEN_BE: u8 = 12;
/// Precomputed table for writing delta codes
pub const READ_BE: &[u8] = &[
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10,
    10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13,
    13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18,
    18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24,
    24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30,
    30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41,
    42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
    54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 64, 65, 66, 67, 68,
    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
];
/// Precomputed lengths table for reading delta codes
pub const READ_LEN_BE: &[u8] = &[
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
    8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1,
];
/// The len we assign to a code that cannot be decoded through the table
pub const MISSING_VALUE_LEN_LE: u8 = 12;
/// Precomputed table for writing delta codes
pub const READ_LE: &[u8] = &[
    0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 15, 0, 4, 0, 0, 0, 1, 0, 31, 0, 5, 0, 0, 0, 2, 0, 63, 0, 6,
    0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0, 16, 0, 4, 0, 0, 0, 1, 0, 32, 0, 5, 0, 0, 0, 2, 0, 64, 0,
    6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2, 0, 17, 0, 4, 0, 0, 0, 1, 0, 33, 0, 5, 0, 0, 0, 2, 0, 65,
    0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0, 0, 2, 0, 18, 0, 4, 0, 0, 0, 1, 0, 34, 0, 5, 0, 0, 0, 2, 0,
    66, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 19, 0, 4, 0, 0, 0, 1, 0, 35, 0, 5, 0, 0, 0,
    2, 0, 67, 0, 6, 0, 0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0, 20, 0, 4, 0, 0, 0, 1, 0, 36, 0, 5, 0,
    0, 0, 2, 0, 68, 0, 6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 21, 0, 4, 0, 0, 0, 1, 0, 37, 0,
    5, 0, 0, 0, 2, 0, 69, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 22, 0, 4, 0, 0, 0, 1, 0,
    38, 0, 5, 0, 0, 0, 2, 0, 70, 0, 6, 0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 23, 0, 4, 0, 0, 0, 1,
    0, 39, 0, 5, 0, 0, 0, 2, 0, 71, 0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0, 24, 0, 4, 0, 0, 0,
    1, 0, 40, 0, 5, 0, 0, 0, 2, 0, 72, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2, 0, 25, 0, 4, 0, 0,
    0, 1, 0, 41, 0, 5, 0, 0, 0, 2, 0, 73, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0, 0, 2, 0, 26, 0, 4,
    0, 0, 0, 1, 0, 42, 0, 5, 0, 0, 0, 2, 0, 74, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 27,
    0, 4, 0, 0, 0, 1, 0, 43, 0, 5, 0, 0, 0, 2, 0, 75, 0, 6, 0, 0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0,
    28, 0, 4, 0, 0, 0, 1, 0, 44, 0, 5, 0, 0, 0, 2, 0, 76, 0, 6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0,
    2, 0, 29, 0, 4, 0, 0, 0, 1, 0, 45, 0, 5, 0, 0, 0, 2, 0, 77, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0,
    0, 0, 2, 0, 30, 0, 4, 0, 0, 0, 1, 0, 46, 0, 5, 0, 0, 0, 2, 0, 78, 0, 6, 0, 0, 0, 1, 0, 7, 0, 3,
    0, 0, 0, 2, 0, 15, 0, 4, 0, 0, 0, 1, 0, 47, 0, 5, 0, 0, 0, 2, 0, 79, 0, 6, 0, 0, 0, 1, 0, 8, 0,
    3, 0, 0, 0, 2, 0, 16, 0, 4, 0, 0, 0, 1, 0, 48, 0, 5, 0, 0, 0, 2, 0, 80, 0, 6, 0, 0, 0, 1, 0, 9,
    0, 3, 0, 0, 0, 2, 0, 17, 0, 4, 0, 0, 0, 1, 0, 49, 0, 5, 0, 0, 0, 2, 0, 81, 0, 6, 0, 0, 0, 1, 0,
    10, 0, 3, 0, 0, 0, 2, 0, 18, 0, 4, 0, 0, 0, 1, 0, 50, 0, 5, 0, 0, 0, 2, 0, 82, 0, 6, 0, 0, 0,
    1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 19, 0, 4, 0, 0, 0, 1, 0, 51, 0, 5, 0, 0, 0, 2, 0, 83, 0, 6, 0,
    0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0, 20, 0, 4, 0, 0, 0, 1, 0, 52, 0, 5, 0, 0, 0, 2, 0, 84, 0,
    6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 21, 0, 4, 0, 0, 0, 1, 0, 53, 0, 5, 0, 0, 0, 2, 0,
    85, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 22, 0, 4, 0, 0, 0, 1, 0, 54, 0, 5, 0, 0, 0,
    2, 0, 86, 0, 6, 0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 23, 0, 4, 0, 0, 0, 1, 0, 55, 0, 5, 0, 0,
    0, 2, 0, 87, 0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0, 24, 0, 4, 0, 0, 0, 1, 0, 56, 0, 5, 0,
    0, 0, 2, 0, 88, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2, 0, 25, 0, 4, 0, 0, 0, 1, 0, 57, 0, 5,
    0, 0, 0, 2, 0, 89, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0, 0, 2, 0, 26, 0, 4, 0, 0, 0, 1, 0, 58,
    0, 5, 0, 0, 0, 2, 0, 90, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 27, 0, 4, 0, 0, 0, 1, 0,
    59, 0, 5, 0, 0, 0, 2, 0, 91, 0, 6, 0, 0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0, 28, 0, 4, 0, 0, 0,
    1, 0, 60, 0, 5, 0, 0, 0, 2, 0, 92, 0, 6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 29, 0, 4, 0,
    0, 0, 1, 0, 61, 0, 5, 0, 0, 0, 2, 0, 93, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 30, 0,
    4, 0, 0, 0, 1, 0, 62, 0, 5, 0, 0, 0, 2, 0, 94, 0, 6, 0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 15,
    0, 4, 0, 0, 0, 1, 0, 31, 0, 5, 0, 0, 0, 2, 0, 95, 0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0,
    16, 0, 4, 0, 0, 0, 1, 0, 32, 0, 5, 0, 0, 0, 2, 0, 96, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2,
    0, 17, 0, 4, 0, 0, 0, 1, 0, 33, 0, 5, 0, 0, 0, 2, 0, 97, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0,
    0, 2, 0, 18, 0, 4, 0, 0, 0, 1, 0, 34, 0, 5, 0, 0, 0, 2, 0, 98, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3,
    0, 0, 0, 2, 0, 19, 0, 4, 0, 0, 0, 1, 0, 35, 0, 5, 0, 0, 0, 2, 0, 99, 0, 6, 0, 0, 0, 1, 0, 12,
    0, 3, 0, 0, 0, 2, 0, 20, 0, 4, 0, 0, 0, 1, 0, 36, 0, 5, 0, 0, 0, 2, 0, 100, 0, 6, 0, 0, 0, 1,
    0, 13, 0, 3, 0, 0, 0, 2, 0, 21, 0, 4, 0, 0, 0, 1, 0, 37, 0, 5, 0, 0, 0, 2, 0, 101, 0, 6, 0, 0,
    0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 22, 0, 4, 0, 0, 0, 1, 0, 38, 0, 5, 0, 0, 0, 2, 0, 102, 0, 6,
    0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 23, 0, 4, 0, 0, 0, 1, 0, 39, 0, 5, 0, 0, 0, 2, 0, 103,
    0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0, 24, 0, 4, 0, 0, 0, 1, 0, 40, 0, 5, 0, 0, 0, 2, 0,
    104, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2, 0, 25, 0, 4, 0, 0, 0, 1, 0, 41, 0, 5, 0, 0, 0,
    2, 0, 105, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0, 0, 2, 0, 26, 0, 4, 0, 0, 0, 1, 0, 42, 0, 5, 0,
    0, 0, 2, 0, 106, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 27, 0, 4, 0, 0, 0, 1, 0, 43, 0,
    5, 0, 0, 0, 2, 0, 107, 0, 6, 0, 0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0, 28, 0, 4, 0, 0, 0, 1, 0,
    44, 0, 5, 0, 0, 0, 2, 0, 108, 0, 6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 29, 0, 4, 0, 0, 0,
    1, 0, 45, 0, 5, 0, 0, 0, 2, 0, 109, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 30, 0, 4, 0,
    0, 0, 1, 0, 46, 0, 5, 0, 0, 0, 2, 0, 110, 0, 6, 0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 15, 0,
    4, 0, 0, 0, 1, 0, 47, 0, 5, 0, 0, 0, 2, 0, 111, 0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0,
    16, 0, 4, 0, 0, 0, 1, 0, 48, 0, 5, 0, 0, 0, 2, 0, 112, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0,
    2, 0, 17, 0, 4, 0, 0, 0, 1, 0, 49, 0, 5, 0, 0, 0, 2, 0, 113, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0,
    0, 0, 2, 0, 18, 0, 4, 0, 0, 0, 1, 0, 50, 0, 5, 0, 0, 0, 2, 0, 114, 0, 6, 0, 0, 0, 1, 0, 11, 0,
    3, 0, 0, 0, 2, 0, 19, 0, 4, 0, 0, 0, 1, 0, 51, 0, 5, 0, 0, 0, 2, 0, 115, 0, 6, 0, 0, 0, 1, 0,
    12, 0, 3, 0, 0, 0, 2, 0, 20, 0, 4, 0, 0, 0, 1, 0, 52, 0, 5, 0, 0, 0, 2, 0, 116, 0, 6, 0, 0, 0,
    1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 21, 0, 4, 0, 0, 0, 1, 0, 53, 0, 5, 0, 0, 0, 2, 0, 117, 0, 6, 0,
    0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 22, 0, 4, 0, 0, 0, 1, 0, 54, 0, 5, 0, 0, 0, 2, 0, 118, 0,
    6, 0, 0, 0, 1, 0, 7, 0, 3, 0, 0, 0, 2, 0, 23, 0, 4, 0, 0, 0, 1, 0, 55, 0, 5, 0, 0, 0, 2, 0,
    119, 0, 6, 0, 0, 0, 1, 0, 8, 0, 3, 0, 0, 0, 2, 0, 24, 0, 4, 0, 0, 0, 1, 0, 56, 0, 5, 0, 0, 0,
    2, 0, 120, 0, 6, 0, 0, 0, 1, 0, 9, 0, 3, 0, 0, 0, 2, 0, 25, 0, 4, 0, 0, 0, 1, 0, 57, 0, 5, 0,
    0, 0, 2, 0, 121, 0, 6, 0, 0, 0, 1, 0, 10, 0, 3, 0, 0, 0, 2, 0, 26, 0, 4, 0, 0, 0, 1, 0, 58, 0,
    5, 0, 0, 0, 2, 0, 122, 0, 6, 0, 0, 0, 1, 0, 11, 0, 3, 0, 0, 0, 2, 0, 27, 0, 4, 0, 0, 0, 1, 0,
    59, 0, 5, 0, 0, 0, 2, 0, 123, 0, 6, 0, 0, 0, 1, 0, 12, 0, 3, 0, 0, 0, 2, 0, 28, 0, 4, 0, 0, 0,
    1, 0, 60, 0, 5, 0, 0, 0, 2, 0, 124, 0, 6, 0, 0, 0, 1, 0, 13, 0, 3, 0, 0, 0, 2, 0, 29, 0, 4, 0,
    0, 0, 1, 0, 61, 0, 5, 0, 0, 0, 2, 0, 125, 0, 6, 0, 0, 0, 1, 0, 14, 0, 3, 0, 0, 0, 2, 0, 30, 0,
    4, 0, 0, 0, 1, 0, 62, 0, 5, 0, 0, 0, 2, 0, 126, 0, 6, 0,
];
/// Precomputed lengths table for reading delta codes
pub const READ_LEN_LE: &[u8] = &[
    12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1,
    5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1,
    11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1,
    4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1,
    12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1,
    5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1,
    10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1,
    4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1,
    12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1,
    5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1,
    9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1,
    4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1,
    12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1,
    5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1,
    8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1,
    4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1,
    12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1,
    5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1,
    11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1,
    4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1,
    12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1,
    5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1,
    10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1,
    4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1,
    12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1,
    5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1,
    9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1,
    4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1,
    12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1,
    5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1,
    8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1,
    4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1,
    12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1,
    5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1,
    11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1,
    4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1,
    12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1,
    5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1,
    10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1,
    4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1,
    12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1,
    5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1,
    9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1,
    4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1,
    12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1,
    5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1,
    8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1,
    4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1,
    12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1,
    5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1,
    11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1,
    4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1,
    12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1,
    5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1,
    10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1,
    4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1,
    12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1,
    5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1,
    9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1,
    4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1,
    12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1,
    5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1, 4, 1,
    8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1, 12, 1,
    4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1, 5, 1,
    12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1, 11, 1,
    5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1, 4, 1,
    11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1, 12, 1,
    4, 1, 11, 1, 5, 1, 12, 1, 4, 1, 8, 1, 5, 1, 12, 1, 4, 1, 9, 1, 5, 1, 12, 1, 4, 1, 10, 1, 5, 1,
    12, 1, 4, 1, 11, 1, 5, 1,
];
///Table used to speed up the writing of delta codes
pub const WRITE_BE: &[u32] = &[
    1, 4, 5, 12, 13, 14, 15, 32, 33, 34, 35, 36, 37, 38, 39, 80, 81, 82, 83, 84, 85, 86, 87, 88,
    89, 90, 91, 92, 93, 94, 95, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
    205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
    448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
    467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
    486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
    505, 506, 507, 508, 509, 510, 511, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
    1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
    1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
    1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
    1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
    1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
    1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
    1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
    1146, 1147, 1148, 1149, 1150, 1151, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
    2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
    2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
    2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
    2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
    2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
    2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
    2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
    2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
    2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
    2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
    2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
    2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
    2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
    2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
    2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
    2554, 2555, 2556, 2557, 2558, 2559, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129,
    5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145,
    5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161,
    5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177,
    5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193,
    5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209,
    5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225,
    5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241,
    5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257,
    5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273,
    5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289,
    5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305,
    5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321,
    5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337,
    5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353,
    5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369,
    5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385,
    5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401,
    5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417,
    5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433,
    5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449,
    5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465,
    5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481,
    5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497,
    5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513,
    5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529,
    5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545,
    5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561,
    5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577,
    5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593,
    5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609,
    5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625,
    5626, 5627, 5628, 5629, 5630, 5631, 11264,
];
///Table used to speed up the writing of delta codes
pub const WRITE_LEN_BE: &[u32] = &[
    1, 4, 4, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 17,
];
///Table used to speed up the writing of delta codes
pub const WRITE_LE: &[u32] = &[
    1, 2, 10, 6, 14, 22, 30, 4, 36, 68, 100, 132, 164, 196, 228, 12, 44, 76, 108, 140, 172, 204,
    236, 268, 300, 332, 364, 396, 428, 460, 492, 20, 52, 84, 116, 148, 180, 212, 244, 276, 308,
    340, 372, 404, 436, 468, 500, 532, 564, 596, 628, 660, 692, 724, 756, 788, 820, 852, 884, 916,
    948, 980, 1012, 28, 60, 92, 124, 156, 188, 220, 252, 284, 316, 348, 380, 412, 444, 476, 508,
    540, 572, 604, 636, 668, 700, 732, 764, 796, 828, 860, 892, 924, 956, 988, 1020, 1052, 1084,
    1116, 1148, 1180, 1212, 1244, 1276, 1308, 1340, 1372, 1404, 1436, 1468, 1500, 1532, 1564, 1596,
    1628, 1660, 1692, 1724, 1756, 1788, 1820, 1852, 1884, 1916, 1948, 1980, 2012, 2044, 8, 136,
    264, 392, 520, 648, 776, 904, 1032, 1160, 1288, 1416, 1544, 1672, 1800, 1928, 2056, 2184, 2312,
    2440, 2568, 2696, 2824, 2952, 3080, 3208, 3336, 3464, 3592, 3720, 3848, 3976, 4104, 4232, 4360,
    4488, 4616, 4744, 4872, 5000, 5128, 5256, 5384, 5512, 5640, 5768, 5896, 6024, 6152, 6280, 6408,
    6536, 6664, 6792, 6920, 7048, 7176, 7304, 7432, 7560, 7688, 7816, 7944, 8072, 8200, 8328, 8456,
    8584, 8712, 8840, 8968, 9096, 9224, 9352, 9480, 9608, 9736, 9864, 9992, 10120, 10248, 10376,
    10504, 10632, 10760, 10888, 11016, 11144, 11272, 11400, 11528, 11656, 11784, 11912, 12040,
    12168, 12296, 12424, 12552, 12680, 12808, 12936, 13064, 13192, 13320, 13448, 13576, 13704,
    13832, 13960, 14088, 14216, 14344, 14472, 14600, 14728, 14856, 14984, 15112, 15240, 15368,
    15496, 15624, 15752, 15880, 16008, 16136, 16264, 24, 152, 280, 408, 536, 664, 792, 920, 1048,
    1176, 1304, 1432, 1560, 1688, 1816, 1944, 2072, 2200, 2328, 2456, 2584, 2712, 2840, 2968, 3096,
    3224, 3352, 3480, 3608, 3736, 3864, 3992, 4120, 4248, 4376, 4504, 4632, 4760, 4888, 5016, 5144,
    5272, 5400, 5528, 5656, 5784, 5912, 6040, 6168, 6296, 6424, 6552, 6680, 6808, 6936, 7064, 7192,
    7320, 7448, 7576, 7704, 7832, 7960, 8088, 8216, 8344, 8472, 8600, 8728, 8856, 8984, 9112, 9240,
    9368, 9496, 9624, 9752, 9880, 10008, 10136, 10264, 10392, 10520, 10648, 10776, 10904, 11032,
    11160, 11288, 11416, 11544, 11672, 11800, 11928, 12056, 12184, 12312, 12440, 12568, 12696,
    12824, 12952, 13080, 13208, 13336, 13464, 13592, 13720, 13848, 13976, 14104, 14232, 14360,
    14488, 14616, 14744, 14872, 15000, 15128, 15256, 15384, 15512, 15640, 15768, 15896, 16024,
    16152, 16280, 16408, 16536, 16664, 16792, 16920, 17048, 17176, 17304, 17432, 17560, 17688,
    17816, 17944, 18072, 18200, 18328, 18456, 18584, 18712, 18840, 18968, 19096, 19224, 19352,
    19480, 19608, 19736, 19864, 19992, 20120, 20248, 20376, 20504, 20632, 20760, 20888, 21016,
    21144, 21272, 21400, 21528, 21656, 21784, 21912, 22040, 22168, 22296, 22424, 22552, 22680,
    22808, 22936, 23064, 23192, 23320, 23448, 23576, 23704, 23832, 23960, 24088, 24216, 24344,
    24472, 24600, 24728, 24856, 24984, 25112, 25240, 25368, 25496, 25624, 25752, 25880, 26008,
    26136, 26264, 26392, 26520, 26648, 26776, 26904, 27032, 27160, 27288, 27416, 27544, 27672,
    27800, 27928, 28056, 28184, 28312, 28440, 28568, 28696, 28824, 28952, 29080, 29208, 29336,
    29464, 29592, 29720, 29848, 29976, 30104, 30232, 30360, 30488, 30616, 30744, 30872, 31000,
    31128, 31256, 31384, 31512, 31640, 31768, 31896, 32024, 32152, 32280, 32408, 32536, 32664, 40,
    168, 296, 424, 552, 680, 808, 936, 1064, 1192, 1320, 1448, 1576, 1704, 1832, 1960, 2088, 2216,
    2344, 2472, 2600, 2728, 2856, 2984, 3112, 3240, 3368, 3496, 3624, 3752, 3880, 4008, 4136, 4264,
    4392, 4520, 4648, 4776, 4904, 5032, 5160, 5288, 5416, 5544, 5672, 5800, 5928, 6056, 6184, 6312,
    6440, 6568, 6696, 6824, 6952, 7080, 7208, 7336, 7464, 7592, 7720, 7848, 7976, 8104, 8232, 8360,
    8488, 8616, 8744, 8872, 9000, 9128, 9256, 9384, 9512, 9640, 9768, 9896, 10024, 10152, 10280,
    10408, 10536, 10664, 10792, 10920, 11048, 11176, 11304, 11432, 11560, 11688, 11816, 11944,
    12072, 12200, 12328, 12456, 12584, 12712, 12840, 12968, 13096, 13224, 13352, 13480, 13608,
    13736, 13864, 13992, 14120, 14248, 14376, 14504, 14632, 14760, 14888, 15016, 15144, 15272,
    15400, 15528, 15656, 15784, 15912, 16040, 16168, 16296, 16424, 16552, 16680, 16808, 16936,
    17064, 17192, 17320, 17448, 17576, 17704, 17832, 17960, 18088, 18216, 18344, 18472, 18600,
    18728, 18856, 18984, 19112, 19240, 19368, 19496, 19624, 19752, 19880, 20008, 20136, 20264,
    20392, 20520, 20648, 20776, 20904, 21032, 21160, 21288, 21416, 21544, 21672, 21800, 21928,
    22056, 22184, 22312, 22440, 22568, 22696, 22824, 22952, 23080, 23208, 23336, 23464, 23592,
    23720, 23848, 23976, 24104, 24232, 24360, 24488, 24616, 24744, 24872, 25000, 25128, 25256,
    25384, 25512, 25640, 25768, 25896, 26024, 26152, 26280, 26408, 26536, 26664, 26792, 26920,
    27048, 27176, 27304, 27432, 27560, 27688, 27816, 27944, 28072, 28200, 28328, 28456, 28584,
    28712, 28840, 28968, 29096, 29224, 29352, 29480, 29608, 29736, 29864, 29992, 30120, 30248,
    30376, 30504, 30632, 30760, 30888, 31016, 31144, 31272, 31400, 31528, 31656, 31784, 31912,
    32040, 32168, 32296, 32424, 32552, 32680, 32808, 32936, 33064, 33192, 33320, 33448, 33576,
    33704, 33832, 33960, 34088, 34216, 34344, 34472, 34600, 34728, 34856, 34984, 35112, 35240,
    35368, 35496, 35624, 35752, 35880, 36008, 36136, 36264, 36392, 36520, 36648, 36776, 36904,
    37032, 37160, 37288, 37416, 37544, 37672, 37800, 37928, 38056, 38184, 38312, 38440, 38568,
    38696, 38824, 38952, 39080, 39208, 39336, 39464, 39592, 39720, 39848, 39976, 40104, 40232,
    40360, 40488, 40616, 40744, 40872, 41000, 41128, 41256, 41384, 41512, 41640, 41768, 41896,
    42024, 42152, 42280, 42408, 42536, 42664, 42792, 42920, 43048, 43176, 43304, 43432, 43560,
    43688, 43816, 43944, 44072, 44200, 44328, 44456, 44584, 44712, 44840, 44968, 45096, 45224,
    45352, 45480, 45608, 45736, 45864, 45992, 46120, 46248, 46376, 46504, 46632, 46760, 46888,
    47016, 47144, 47272, 47400, 47528, 47656, 47784, 47912, 48040, 48168, 48296, 48424, 48552,
    48680, 48808, 48936, 49064, 49192, 49320, 49448, 49576, 49704, 49832, 49960, 50088, 50216,
    50344, 50472, 50600, 50728, 50856, 50984, 51112, 51240, 51368, 51496, 51624, 51752, 51880,
    52008, 52136, 52264, 52392, 52520, 52648, 52776, 52904, 53032, 53160, 53288, 53416, 53544,
    53672, 53800, 53928, 54056, 54184, 54312, 54440, 54568, 54696, 54824, 54952, 55080, 55208,
    55336, 55464, 55592, 55720, 55848, 55976, 56104, 56232, 56360, 56488, 56616, 56744, 56872,
    57000, 57128, 57256, 57384, 57512, 57640, 57768, 57896, 58024, 58152, 58280, 58408, 58536,
    58664, 58792, 58920, 59048, 59176, 59304, 59432, 59560, 59688, 59816, 59944, 60072, 60200,
    60328, 60456, 60584, 60712, 60840, 60968, 61096, 61224, 61352, 61480, 61608, 61736, 61864,
    61992, 62120, 62248, 62376, 62504, 62632, 62760, 62888, 63016, 63144, 63272, 63400, 63528,
    63656, 63784, 63912, 64040, 64168, 64296, 64424, 64552, 64680, 64808, 64936, 65064, 65192,
    65320, 65448, 56,
];
///Table used to speed up the writing of delta codes
pub const WRITE_LEN_LE: &[u32] = &[
    1, 4, 4, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 17,
];
///Table used to speed up the skipping of delta codes
pub const LEN: &[u8] = &[
    1, 4, 4, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
    10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
    10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
    14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
    16, 16, 16, 16, 16, 16, 16, 16, 17,
];
