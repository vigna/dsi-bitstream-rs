[package]
name = "dsi-bitstream"
version = "0.5.0"
edition = "2021"
description = "A Rust implementation of read/write bit streams supporting several types of instantaneous codes"
repository = "https://github.com/vigna/dsi-bitstream-rs/"
license = "Apache-2.0 OR LGPL-2.1-or-later"
readme = "README.md"
keywords = ["bitstream", "codes", "compression"]
categories = ["compression"]
authors = [
	"Tommaso Fontana <tommaso.fontana.96@gmail.com>",
	"Sebastiano Vigna <sebastiano.vigna@unimi.it>",
]

[dependencies]
rand = { version = "0.9.0", features = ["small_rng"] }
arbitrary = { version = "1", features = ["derive"], optional = true }
common_traits = ">=0.10.2"
mem_dbg = { version = "0.3.0", optional = true }
anyhow = "1.0.86"
impl-tools = "0.10.2"

[dev-dependencies]
criterion = "0.5.1"
zip = "2.1.3"
rand_distr = "0.5.0"

[features]
default = ["std", "mem_dbg"]
std = ["alloc"]
alloc = []
fuzz = ["dep:arbitrary"]
# Enable additional checks on the argument of some methods; in particular, the
# value of words to be written must fit the provided bit width
checks = []
# Disable copy_from/copy_to implementations so to test the default methods
no_copy_impls = []
# This is necessary to avoid warnings from MemDbg and to use the 
# offset_of_enum MemDbg feature gate if needed
offset_of_enum = []

[profile.bench]
opt-level = 3 # like --release
lto = "fat"              # Full LTO
overflow-checks = false  # Disable integer overflow checks.
debug = true             # Include debug info.
debug-assertions = false # Enables debug assertions.
codegen-units = 1        # slower compile times, but maybe better perf


[[bench]]
name = "write_unary"
harness = false

[[bench]]
name = "write_gamma"
harness = false

[[bench]]
name = "vbyte"
harness = false

[[bench]]
name = "universal"
harness = false
