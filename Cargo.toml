[package]
name = "dsi-bitstream"
version = "0.4.2"
edition = "2021"
description = "A Rust implementation of read/write bit streams supporting several types of instantaneous codes"
repository = "https://github.com/vigna/dsi-bitstream-rs/"
license = "Apache-2.0 OR LGPL-2.1-or-later"
readme = "README.md"
keywords = ["bitstream", "codes", "compression"]
categories = ["compression"]
authors = ["Tommaso Fontana <tommaso.fontana.96@gmail.com>", "Sebastiano Vigna <sebastiano.vigna@unimi.it>"]

[dependencies]
rand = { version = "0.8.5", features = ["small_rng"] }
arbitrary = { version = "1", features = ["derive"], optional = true }
common_traits = ">=0.10.2"
mem_dbg = {version="0.2.2", optional = true}
anyhow = "1.0.86"
serde = { version = "1.0", features = ["derive"], optional = true }

[dev-dependencies]
criterion = "0.5.1"
zip = "2.1.3"
rand_distr = "0.4.3"

[features]
default = ["std", "mem_dbg"]
std = ["alloc"]
alloc = []
fuzz = ["dep:arbitrary"]
checks = []
no_copy_impls = [] # Disable copy_from/copy_to implementations so to test the default methods

[[bench]]
name = "write_unary"
harness = false

[[bench]]
name = "write_gamma"
harness = false
